{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shivam\\\\ARMS-Portal\\\\frontend\\\\src\\\\admin-components\\\\DashboardCards.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardCards = () => {\n  _s();\n  const [stats, setStats] = useState({\n    totalUniversities: 0,\n    notesCount: 0,\n    syllabusCount: 0,\n    papersCount: 0\n  });\n  useEffect(() => {\n    fetch('http://localhost:5000/api/stats').then(res => res.json()).then(data => setStats(data)).catch(err => console.error('Failed to fetch stats:', err));\n  }, []);\n  const cards = [{\n    title: 'Total Universities',\n    value: stats.totalUniversities\n  }, {\n    title: 'Notes Uploaded',\n    value: stats.notesCount\n  }, {\n    title: 'Syllabus Entries',\n    value: stats.syllabusCount\n  }, {\n    title: 'Question Papers',\n    value: stats.papersCount\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6\",\n    children: cards.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-6 rounded shadow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-gray-600\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-2xl font-bold mt-2\",\n        children: item.value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardCards, \"gJDRnWu4SW994kXgVsr/WwXbBEQ=\");\n_c = DashboardCards;\nexport default DashboardCards;\nvar _c;\n$RefreshReg$(_c, \"DashboardCards\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","DashboardCards","_s","stats","setStats","totalUniversities","notesCount","syllabusCount","papersCount","fetch","then","res","json","data","catch","err","console","error","cards","title","value","className","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shivam/ARMS-Portal/frontend/src/admin-components/DashboardCards.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst DashboardCards = () => {\r\n  const [stats, setStats] = useState({\r\n    totalUniversities: 0,\r\n    notesCount: 0,\r\n    syllabusCount: 0,\r\n    papersCount: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:5000/api/stats')\r\n      .then(res => res.json())\r\n      .then(data => setStats(data))\r\n      .catch(err => console.error('Failed to fetch stats:', err));\r\n  }, []);\r\n\r\n  const cards = [\r\n    { title: 'Total Universities', value: stats.totalUniversities },\r\n    { title: 'Notes Uploaded', value: stats.notesCount },\r\n    { title: 'Syllabus Entries', value: stats.syllabusCount },\r\n    { title: 'Question Papers', value: stats.papersCount },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6\">\r\n      {cards.map((item, index) => (\r\n        <div key={index} className=\"bg-white p-6 rounded shadow\">\r\n          <h3 className=\"text-gray-600\">{item.title}</h3>\r\n          <p className=\"text-2xl font-bold mt-2\">{item.value}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardCards;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC;IACjCO,iBAAiB,EAAE,CAAC;IACpBC,UAAU,EAAE,CAAC;IACbC,aAAa,EAAE,CAAC;IAChBC,WAAW,EAAE;EACf,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACdY,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAIT,QAAQ,CAACS,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEF,GAAG,CAAC,CAAC;EAC/D,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,KAAK,GAAG,CACZ;IAAEC,KAAK,EAAE,oBAAoB;IAAEC,KAAK,EAAEjB,KAAK,CAACE;EAAkB,CAAC,EAC/D;IAAEc,KAAK,EAAE,gBAAgB;IAAEC,KAAK,EAAEjB,KAAK,CAACG;EAAW,CAAC,EACpD;IAAEa,KAAK,EAAE,kBAAkB;IAAEC,KAAK,EAAEjB,KAAK,CAACI;EAAc,CAAC,EACzD;IAAEY,KAAK,EAAE,iBAAiB;IAAEC,KAAK,EAAEjB,KAAK,CAACK;EAAY,CAAC,CACvD;EAED,oBACER,OAAA;IAAKqB,SAAS,EAAC,sDAAsD;IAAAC,QAAA,EAClEJ,KAAK,CAACK,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBzB,OAAA;MAAiBqB,SAAS,EAAC,6BAA6B;MAAAC,QAAA,gBACtDtB,OAAA;QAAIqB,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAEE,IAAI,CAACL;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC/C7B,OAAA;QAAGqB,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EAAEE,IAAI,CAACJ;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAF/CJ,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAhCID,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}