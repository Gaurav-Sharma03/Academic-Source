{"ast":null,"code":"var _jsxFileName = \"D:\\\\Academic Resource Management System\\\\frontend\\\\src\\\\admin-pages\\\\UploadResources.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { FaUpload, FaUniversity, FaBook, FaFilePdf, FaClipboard, FaLayerGroup, FaBookReader, FaCalendarAlt } from 'react-icons/fa';\n\n// API instance using environment variable\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE\n});\nconst UploadResources = () => {\n  _s();\n  const [universities, setUniversities] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [semesterOptions, setSemesterOptions] = useState([]);\n  const [formData, setFormData] = useState({\n    university: '',\n    department: '',\n    course: '',\n    semester: '',\n    type: 'notes',\n    title: '',\n    file: null\n  });\n  useEffect(() => {\n    // ✅ Use API instance instead of hardcoded URL\n    API.get('/api/universities').then(res => setUniversities(res.data)).catch(err => console.error('Failed to fetch universities:', err));\n  }, []);\n  useEffect(() => {\n    const selectedUni = universities.find(u => u._id === formData.university);\n    if (selectedUni) {\n      setDepartments(selectedUni.departments);\n      setFormData(prev => ({\n        ...prev,\n        department: '',\n        course: '',\n        semester: ''\n      }));\n      setCourses([]);\n      setSemesterOptions([]);\n    }\n  }, [formData.university]);\n  useEffect(() => {\n    const selectedDept = departments.find(d => d.name === formData.department);\n    if (selectedDept) {\n      setCourses(selectedDept.courses || []);\n      setFormData(prev => ({\n        ...prev,\n        course: '',\n        semester: ''\n      }));\n      setSemesterOptions([]);\n    }\n  }, [formData.department]);\n  useEffect(() => {\n    const selectedCourse = courses.find(c => c.name === formData.course);\n    if (selectedCourse) {\n      const total = parseInt(selectedCourse.semesters);\n      const semesters = Array.from({\n        length: total\n      }, (_, i) => i + 1);\n      setSemesterOptions(semesters);\n    }\n  }, [formData.course]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFileChange = e => {\n    setFormData(prev => ({\n      ...prev,\n      file: e.target.files[0]\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const data = new FormData();\n    Object.entries(formData).forEach(([key, value]) => {\n      if (key !== 'file') data.append(key, value);\n    });\n    data.append('file', formData.file);\n    try {\n      // ✅ Use API instance here too\n      const res = await API.post('/api/resources/upload', data);\n      alert('✅ Uploaded successfully');\n      setFormData({\n        university: '',\n        department: '',\n        course: '',\n        semester: '',\n        type: 'notes',\n        title: '',\n        file: null\n      });\n      setDepartments([]);\n      setCourses([]);\n      setSemesterOptions([]);\n    } catch (err) {\n      var _err$response;\n      console.error('Upload error:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      alert('❌ Failed to upload resource');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-2xl mx-auto mt-10 p-6 bg-white rounded-xl shadow-lg\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-center text-indigo-700 mb-8 flex items-center justify-center gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(FaUpload, {\n        className: \"text-indigo-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), \" Upload Academic Resource\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadResources, \"S8TlSARlqxDjWk6J56ZH/AWr5nU=\");\n_c = UploadResources;\nexport default UploadResources;\nvar _c;\n$RefreshReg$(_c, \"UploadResources\");","map":{"version":3,"names":["React","useState","useEffect","axios","FaUpload","FaUniversity","FaBook","FaFilePdf","FaClipboard","FaLayerGroup","FaBookReader","FaCalendarAlt","jsxDEV","_jsxDEV","API","create","baseURL","process","env","REACT_APP_API_BASE","UploadResources","_s","universities","setUniversities","departments","setDepartments","courses","setCourses","semesterOptions","setSemesterOptions","formData","setFormData","university","department","course","semester","type","title","file","get","then","res","data","catch","err","console","error","selectedUni","find","u","_id","prev","selectedDept","d","name","selectedCourse","c","total","parseInt","semesters","Array","from","length","_","i","handleChange","e","value","target","handleFileChange","files","handleSubmit","preventDefault","FormData","Object","entries","forEach","key","append","post","alert","_err$response","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["D:/Academic Resource Management System/frontend/src/admin-pages/UploadResources.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport {\r\n  FaUpload,\r\n  FaUniversity,\r\n  FaBook,\r\n  FaFilePdf,\r\n  FaClipboard,\r\n  FaLayerGroup,\r\n  FaBookReader,\r\n  FaCalendarAlt,\r\n} from 'react-icons/fa';\r\n\r\n// API instance using environment variable\r\nconst API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE,\r\n});\r\n\r\nconst UploadResources = () => {\r\n  const [universities, setUniversities] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [semesterOptions, setSemesterOptions] = useState([]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    university: '',\r\n    department: '',\r\n    course: '',\r\n    semester: '',\r\n    type: 'notes',\r\n    title: '',\r\n    file: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    // ✅ Use API instance instead of hardcoded URL\r\n    API.get('/api/universities')\r\n      .then(res => setUniversities(res.data))\r\n      .catch(err => console.error('Failed to fetch universities:', err));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const selectedUni = universities.find(u => u._id === formData.university);\r\n    if (selectedUni) {\r\n      setDepartments(selectedUni.departments);\r\n      setFormData(prev => ({ ...prev, department: '', course: '', semester: '' }));\r\n      setCourses([]);\r\n      setSemesterOptions([]);\r\n    }\r\n  }, [formData.university]);\r\n\r\n  useEffect(() => {\r\n    const selectedDept = departments.find(d => d.name === formData.department);\r\n    if (selectedDept) {\r\n      setCourses(selectedDept.courses || []);\r\n      setFormData(prev => ({ ...prev, course: '', semester: '' }));\r\n      setSemesterOptions([]);\r\n    }\r\n  }, [formData.department]);\r\n\r\n  useEffect(() => {\r\n    const selectedCourse = courses.find(c => c.name === formData.course);\r\n    if (selectedCourse) {\r\n      const total = parseInt(selectedCourse.semesters);\r\n      const semesters = Array.from({ length: total }, (_, i) => i + 1);\r\n      setSemesterOptions(semesters);\r\n    }\r\n  }, [formData.course]);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFormData(prev => ({ ...prev, file: e.target.files[0] }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData();\r\n    Object.entries(formData).forEach(([key, value]) => {\r\n      if (key !== 'file') data.append(key, value);\r\n    });\r\n    data.append('file', formData.file);\r\n\r\n    try {\r\n      // ✅ Use API instance here too\r\n      const res = await API.post('/api/resources/upload', data);\r\n      alert('✅ Uploaded successfully');\r\n      setFormData({\r\n        university: '',\r\n        department: '',\r\n        course: '',\r\n        semester: '',\r\n        type: 'notes',\r\n        title: '',\r\n        file: null,\r\n      });\r\n      setDepartments([]);\r\n      setCourses([]);\r\n      setSemesterOptions([]);\r\n    } catch (err) {\r\n      console.error('Upload error:', err.response?.data || err.message);\r\n      alert('❌ Failed to upload resource');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto mt-10 p-6 bg-white rounded-xl shadow-lg\">\r\n      <h2 className=\"text-3xl font-bold text-center text-indigo-700 mb-8 flex items-center justify-center gap-2\">\r\n        <FaUpload className=\"text-indigo-600\" /> Upload Academic Resource\r\n      </h2>\r\n\r\n      <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n        {/* Rest of the form remains unchanged */}\r\n        {/* ... */}\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadResources;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}