{"ast":null,"code":"// components/VerifyLoginRedirect.jsx\nimport{useEffect}from'react';import{useNavigate}from'react-router-dom';const VerifyLoginRedirect=()=>{const navigate=useNavigate();useEffect(()=>{const role=localStorage.getItem('role');if(role==='admin'){navigate('/admin');// üîê protected inside App.js\n}else if(role==='authority'){navigate('/authority-pages/AuthorityDashboard');}else if(role==='user'){navigate('/user-pages/UserDashboard');}else{navigate('/login');// fallback if token/role is invalid\n}},[navigate]);return null;};export default VerifyLoginRedirect;","map":{"version":3,"names":["useEffect","useNavigate","VerifyLoginRedirect","navigate","role","localStorage","getItem"],"sources":["C:/Users/Shivam/Desktop/Academic-Source/frontend/src/components/VerifyLoginRedirect.js"],"sourcesContent":["// components/VerifyLoginRedirect.jsx\r\nimport { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst VerifyLoginRedirect = () => {\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const role = localStorage.getItem('role');\r\n\r\n    if (role === 'admin') {\r\n      navigate('/admin'); // üîê protected inside App.js\r\n    } else if (role === 'authority') {\r\n      navigate('/authority-pages/AuthorityDashboard');\r\n    } else if (role === 'user') {\r\n      navigate('/user-pages/UserDashboard');\r\n    } else {\r\n      navigate('/login'); // fallback if token/role is invalid\r\n    }\r\n  }, [navigate]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default VerifyLoginRedirect;\r\n"],"mappings":"AAAA;AACA,OAASA,SAAS,KAAQ,OAAO,CACjC,OAASC,WAAW,KAAQ,kBAAkB,CAE9C,KAAM,CAAAC,mBAAmB,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAAC,QAAQ,CAAGF,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAI,IAAI,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAEzC,GAAIF,IAAI,GAAK,OAAO,CAAE,CACpBD,QAAQ,CAAC,QAAQ,CAAC,CAAE;AACtB,CAAC,IAAM,IAAIC,IAAI,GAAK,WAAW,CAAE,CAC/BD,QAAQ,CAAC,qCAAqC,CAAC,CACjD,CAAC,IAAM,IAAIC,IAAI,GAAK,MAAM,CAAE,CAC1BD,QAAQ,CAAC,2BAA2B,CAAC,CACvC,CAAC,IAAM,CACLA,QAAQ,CAAC,QAAQ,CAAC,CAAE;AACtB,CACF,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,MAAO,KAAI,CACb,CAAC,CAED,cAAe,CAAAD,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}